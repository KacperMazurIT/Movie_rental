@model MovieRental.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int formId = 0;
    if (ViewBag.FormId != null)
    {
        formId = (int)ViewBag.FormId;
    }
}

<script>
    function AddGridEventParams() {
        return {
            id: '@formId'
        }
    }
</script>

<h2>New Movie Final Step</h2>

@using (Html.BeginForm("SaveFull", "Movies"))
{
    @Html.ValidationSummary()
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ActorId)
        @Html.DropDownListFor(m => m.ActorId,
        new SelectList(Model.Customers, "Id", "Name"),
        "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ActorId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GenreId)
        @Html.DropDownListFor(m => m.GenreId,
        new SelectList(Model.Genres, "Id", "Name"),
        "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>

    <a class="btn btn-success" style="margin-bottom:10px" onclick="PopupForm('@Url.Action("AddOrEdit1","Movies")/@formId')"><i class="fa fa-plus"></i>Add New Actor</a>

    <table id="actorInMovieTable" class="table table-striped table-bordered" style="width:100%">

        <thead>
            <tr>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
    </table>


    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>

}

    <link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />

@section scripts
{
    <script src="//cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")

<script>

        var Popup, dataTable;

        $(document).ready(function () {
            dataTable =  $("#actorInMovieTable").DataTable({

                "ajax": {

                    "url": "/Movies/GetData/"+ "@formId" ,
                    "type": "GET",
                    "datatype": "json"
                },

                "columns": [
                    { "data": "ActorName" },
                    {
                        "data": "Id", "render": function (data) {
                            return "<a class='btn btn-default btn-sm' onclick=PopupForm('@Url.Action("AddOrEdit", "Movies")/" + data + "')><i class='fa fa-pencil'></i>Edit</a> <a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete(" + data + ")><i class='fa fa-trash'></i>Delete</a>";
                        },

                        "orderable": false,
                        "searchable": false,
                        "width" : "150px"
                    }


                ],

                "language": {
                    "emptyTable" : "No data found please click on <b>Add New Actor</b> Button"
                }

            });
        });

        function PopupForm(url) {

            var formDiv = $('<div/>');
            $.get(url)
                .done(function (response) {

                    formDiv.html(response);

                    Popup = formDiv.dialog({

                        autoOpen : true,
                        resizable : false,
                        title : 'Fill Actor Details',
                        height : 200,
                        width : 300,
                        close: function () {

                            Popup.dialog('destroy').remove();
                        }

                    });

                });
        }

        function SubmitForm(form) {

            $.validator.unobtrusive.parse(form);
            if ($(form).valid()) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("AddOrEdit", "Movies")',
                data: $(form).serialize(),
                success: function (data) {

                    if (data.success) {

                        Popup.dialog('close');
                        dataTable.ajax.reload();

                        $.notify(data.message, {
                            globalPosition: "top center",
                            className:"success"
                        })


                    }
                }
                });
            }

            return false;

        }

        function Delete(id) {
            if (confirm('Are you sure to Delete this record ?')) {

                $.ajax({

                    type: "POST",
                    url: '@Url.Action("Delete","Movies")/' + id,
                    success: function (data) {

                        if (data.success) {

                            dataTable.ajax.reload();

                            $.notify(data.message, {
                                globalPosition: "top center",
                                className: "success"
                            })

                        }
                    }

                });
            }
        }

</script>

}
